name: XenOS CI / Release / Docs

on:
  push:
    branches: ["**"]
    tags: ["v*.*.*"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    name: Build (verify)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Check pnpm version
        run: pnpm --version

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run build script
        run: |
          chmod +x ./scripts/build.sh
          ./scripts/build.sh

      - name: Archive production build
        if: success()
        run: |
          cd build
          zip -r ../xenos-build.zip ./*
          cd ..

      - name: Upload build artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: xenos-build
          path: xenos-build.zip
          retention-days: 7

  release:
    name: Create/Update Main Release
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: xenos-build
      - name: Force tag 'main' to this commit
        run: |
          git init -q
          git remote add origin $GITHUB_SERVER_URL/$GITHUB_REPOSITORY
          git fetch --depth=1 origin $GITHUB_SHA
          git checkout -q $GITHUB_SHA
          git tag -f main $GITHUB_SHA
          git push origin :refs/tags/main || true
          git push origin refs/tags/main
      - name: Generate release notes
        run: |
          echo "Commit: ${GITHUB_SHA}" > release-notes.md
          echo "Ref: main" >> release-notes.md
          echo "Built: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> release-notes.md

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: main
          name: XenOS main
          body_path: release-notes.md
          files: |
            xenos-build.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docs:
    name: Build & Package TypeDoc
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate TypeDoc site
        run: pnpm typedoc

      - name: Prepare docs publish dir
        run: |
          mkdir -p site
          if [ -d docs ]; then mkdir -p site/api && cp -R docs/* site/api/; fi
          if [ ! -f site/index.html ]; then echo '<meta http-equiv="refresh" content="0; url=api/index.html" />' > site/index.html; fi

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy-docs:
    name: Deploy TypeDoc to Pages
    needs: docs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
